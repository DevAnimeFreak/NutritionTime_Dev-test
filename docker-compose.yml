version: '3.8'

services:
  trafficker:
    image: traefik:v2.7
    restart: always
    container_name: traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.rule=Host(`nutritiontime.top/api/`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"
    #      - "traefik.http.middlewares.tfk.basicauth.users=dashboard:$$2y$$10$$NPFjkHeadxwgZ.EY5pKo/.ETsyRSHNaoswfPATUJMljsb7JW4CMfu"
    #      - "traefik.http.routers.traefik.middlewares=tfk"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/traefik.yml:/traefik.yml:ro
      - ./docker/traefik/dynamic.yml:/dynamic.yml:ro
    #      - ./docker/traefik/acme.json:/acme.json
    networks:
      - traefik
      - frontend

  frontend:
    build:
      context: .
      dockerfile: docker/nginx/production/Dockerfile
    #      args:
    #        APP_WORKDIR: $APP_WORKDIR
    container_name: nodejs
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.entrypoints=http"
      - "traefik.http.routers.frontend.rule=Host(`nutritiontime-local.top`)"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.traefik.tls.options=sslmozgen@file"
#      - "traefik.http.services.frontend-service.loadbalancer.server.port=80"
      - "traefik.http.services.frontend-service.loadbalancer.server.address=frontend:80"
    #    volumes:
    #      - ${PROJECT_DIR}:"/usr/share/nginx/html"
    networks:
      - frontend


networks:
  traefik:
    external: true
  frontend:
    external: false
#
#version: '3.8'
#
#services:
#  trafficker:
#    image: traefik:v2.7
#    restart: always
#    container_name: traefik
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.traefik.entrypoints=http"
#      - "traefik.http.routers.traefik.rule=Host(`nutritiontime-traefic.top`)"
#      - "traefik.http.routers.traefik.tls=false"
#      - "traefik.http.routers.traefik.service=api@internal"
#    #      - "traefik.http.middlewares.tfk.basicauth.users=dashboard:$$2y$$10$$NPFjkHeadxwgZ.EY5pKo/.ETsyRSHNaoswfPATUJMljsb7JW4CMfu"
#    #      - "traefik.http.routers.traefik.middlewares=tfk"
#    ports:
#      - "80:80"
#      - "443:443"
#      - "8080:8080"
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - ./docker/traefik/traefik.yml:/traefik.yml:ro
#      - ./docker/traefik/dynamic.yml:/dynamic.yml:ro
#    #      - ./docker/traefik/acme.json:/acme.json
#    networks:
#      - traefik
#
#  frontend:
#    build:
#      context: .
#      dockerfile: docker/nginx/local/Dockerfile
#    #      args:
#    #        APP_WORKDIR: $APP_WORKDIR
#    container_name: nodejs
#    restart: always
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.nginx.entrypoints=http"
#      - "traefik.http.routers.nginx.rule=Host(`nutritiontime-local.top`)"
#      - "traefik.http.routers.nginx.tls=false"
#      - "traefik.http.services.nginx-service.loadbalancer.server.port=80"
#    expose:
#      - "80"
#    volumes:
#      - ${PROJECT_DIR}:/usr/share/nginx/html
#    networks:
#      - traefik
#      - frontend
#
#
#networks:
#  traefik:
#    external: true
#  frontend:
#    external: false

